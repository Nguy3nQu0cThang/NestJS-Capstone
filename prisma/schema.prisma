generator client {
  provider = "prisma-client-js"
  // output   = "../generated/prisma"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model bookings {
  id        Int       @id @default(autoincrement())
  room_id   Int?
  user_id   Int?
  check_in  DateTime? @db.Date
  check_out DateTime? @db.Date
  guests    Int?
  rooms     rooms?    @relation(fields: [room_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "bookings_ibfk_1")
  users     users?    @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "bookings_ibfk_2")

  @@index([room_id], map: "room_id")
  @@index([user_id], map: "user_id")
}

model locations {
  id         Int     @id @default(autoincrement())
  name       String  @db.VarChar(100)
  province   String? @db.VarChar(100)
  country    String? @db.VarChar(100)
  value_text String? @db.VarChar(255)
  image      String? @db.VarChar(255)
  rooms      rooms[]
}

model reviews {
  id         Int       @id @default(autoincrement())
  room_id    Int?
  user_id    Int?
  content    String?   @db.Text
  rating     Float?    @db.Float
  created_at DateTime? @default(now()) @db.Timestamp(0)
  rooms      rooms?    @relation(fields: [room_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "reviews_ibfk_1")
  users      users?    @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "reviews_ibfk_2")

  @@index([room_id], map: "room_id")
  @@index([user_id], map: "user_id")
}

model room_images {
  id        Int     @id @default(autoincrement())
  room_id   Int?
  image_url String? @db.VarChar(255)
  rooms     rooms?  @relation(fields: [room_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "room_images_ibfk_1")

  @@index([room_id], map: "room_id")
}

model rooms {
  id               Int           @id @default(autoincrement())
  name             String        @db.VarChar(100)
  guests           Int?
  bed_room         Int?
  bath_room        Int?
  description      String?       @db.Text
  price            Int
  elevator         Boolean?
  hot_tub          Boolean?
  pool             Boolean?
  indoor_fireplace Boolean?
  dryer            Boolean?
  gym              Boolean?
  kitchen          Boolean?
  wifi             Boolean?
  heating          Boolean?
  cable_tv         Boolean?
  location_id      Int?
  bookings         bookings[]
  reviews          reviews[]
  room_images      room_images[]
  locations        locations?    @relation(fields: [location_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "rooms_ibfk_1")

  @@index([location_id], map: "location_id")
}

model users {
  id         Int        @id @default(autoincrement())
  name       String     @db.VarChar(100)
  email      String     @unique(map: "email") @db.VarChar(100)
  password   String     @db.VarChar(255)
  phone      String?    @db.VarChar(20)
  birthday   DateTime?  @db.Date
  gender     Boolean?
  role       String?    @default("USER") @db.VarChar(20)
  avatar     String?    @db.VarChar(255)
  created_at DateTime?  @default(now()) @db.Timestamp(0)
  bookings   bookings[]
  reviews    reviews[]
}
